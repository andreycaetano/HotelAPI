// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id       String @id @default(uuid())
  username String @unique @db.VarChar(255)
  password String @db.VarChar(255)
  email    String @unique @db.VarChar(255)
  role     String @default("user") @db.VarChar(5)
}

model Country {
  id   String @id @default(uuid())
  name String @unique @db.VarChar(255)

  cities City[]
}

model City {
  id   String @id @default(uuid())
  name String @db.VarChar(255)

  hotel     Hotel[]
  countryId String
  country   Country @relation(fields: [countryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model TravelTime {
  id          String @id @default(uuid())
  travel_time String @unique @db.VarChar(255)
  hotel       Hotel[]
}

model Sports {
  id    String  @id @default(uuid())
  sport String  @unique @db.VarChar(255)
  hotel Hotel[]
}

model Ratings {
  id     String  @id @default(uuid())
  rating String  @unique @db.VarChar(255)
  hotel  Hotel[]
}

model Conditions {
  id        String  @id @default(uuid())
  condition String  @unique @db.VarChar(255)
  hotel     Hotel[]
}

model Facilities {
  id       String @id @default(uuid())
  facility String @db.VarChar(255)
  icon     String @db.VarChar(255)

  hotel Hotel[]
}

model Descriptions {
  id            String @id @default(uuid())
  destination   String @db.VarChar(255)
  accommodation String @db.VarChar(255)
  activities    String @db.VarChar(255)
  commentId     String @db.VarChar(255)

  comment Comment @relation(fields: [commentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  hotel   Hotel[]
}

model Comment {
  id      String @id @default(uuid())
  author  String @db.VarChar(255)
  photo   String @db.VarChar(255)
  comment String @db.VarChar(255)

  description Descriptions[]
}

model Card {
  id              String @id @default(uuid())
  title           String @db.VarChar(255)
  description_big String @db.VarChar(255)
  description1    String @db.VarChar(255)
  description2    String @db.VarChar(255)
  description3    String @db.VarChar(255)

  hotel Hotel[]
}

model HotelImages {
  id      String @id @default(uuid())
  path    String @db.VarChar(255)
  hotelId String

  hotel Hotel @relation(fields: [hotelId], references: [id])
}

model Hotel {
  id            String        @id @default(uuid())
  name          String        @db.VarChar(255)
  movie         String?        @db.VarChar(255)
  promotion     Boolean       @default(false)
  cardId        String
  descriptionId String
  cityId        String
  ratingId      String
  images        HotelImages[]
  conditions    Conditions[]
  facilities    Facilities[]
  sports        Sports[]
  travelTimeId String  

  travelTime TravelTime    @relation(fields: [travelTimeId], references: [id])
  ratings     Ratings      @relation(fields: [ratingId], references: [id])
  city        City         @relation(fields: [cityId], references: [id])
  card        Card         @relation(fields: [cardId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  description Descriptions @relation(fields: [descriptionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
